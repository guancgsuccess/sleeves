<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chixing.mapper.RenderingImgMapper">
  <resultMap id="BaseResultMap" type="com.chixing.entity.RenderingImg">
    <id column="rendering_img_id" jdbcType="INTEGER" property="renderingImgId" />
    <result column="rendering_id" jdbcType="INTEGER" property="renderingId" />
    <result column="rendering_images_path" jdbcType="VARCHAR" property="renderingImagesPath" />
    <result column="rendering_sortno" jdbcType="INTEGER" property="renderingSortno" />
    <result column="fileds1" jdbcType="VARCHAR" property="fileds1" />
    <result column="fileds2" jdbcType="INTEGER" property="fileds2" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    rendering_img_id, rendering_id, rendering_images_path, rendering_sortno, fileds1, 
    fileds2
  </sql>

  <!-- 根据公司ID查询图片-->
  <select id="selectByCompanyId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT ri.rendering_images_path
    FROM rendering_img ri JOIN rendering r
    ON ri.rendering_id = r.rendering_id
    JOIN design d
    ON r.rendering_design_id = d.design_id
    JOIN company c
    ON d.design_company_id = c.company_id
    WHERE c.company_id = #{companyId,jdbcType=INTEGER}
    LIMIT 0,4
</select>


  <!-- 根据效果图ID查询图片-->
    <select id="selectByRenderingId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
      SELECT DISTINCT ri.rendering_images_path
      FROM rendering r join rendering_img ri
      ON r.rendering_id = ri.rendering_id
      WHERE r.rendering_id = #{renderingId,jdbcType=INTEGER}
      LIMIT 0,5
    </select>

  <!--根据方案id查询对应的图片集合-->
  <select id="selectByDesignId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
      SELECT rimg.rendering_images_path
      FROM rendering ren JOIN rendering_img rimg
      ON ren.rendering_id=rimg.rendering_id
      WHERE ren.rendering_design_id=#{designId,jdbcType=INTEGER}
  </select>



  <select id="selectByExample" parameterType="com.chixing.entity.RenderingImgExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rendering_img
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rendering_img
    where rendering_img_id = #{renderingImgId,jdbcType=INTEGER}
  </select>

  <select id="selectFourCompanyImg" >

  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rendering_img
    where rendering_img_id = #{renderingImgId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chixing.entity.RenderingImgExample">
    delete from rendering_img
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>


  <insert id="insert" parameterType="com.chixing.entity.RenderingImg">
    insert into rendering_img (rendering_img_id, rendering_id, rendering_images_path, 
      rendering_sortno, fileds1, fileds2
      )
    values (#{renderingImgId,jdbcType=INTEGER}, #{renderingId,jdbcType=INTEGER}, #{renderingImagesPath,jdbcType=VARCHAR}, 
      #{renderingSortno,jdbcType=INTEGER}, #{fileds1,jdbcType=VARCHAR}, #{fileds2,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chixing.entity.RenderingImg">
    insert into rendering_img
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="renderingImgId != null">
        rendering_img_id,
      </if>
      <if test="renderingId != null">
        rendering_id,
      </if>
      <if test="renderingImagesPath != null">
        rendering_images_path,
      </if>
      <if test="renderingSortno != null">
        rendering_sortno,
      </if>
      <if test="fileds1 != null">
        fileds1,
      </if>
      <if test="fileds2 != null">
        fileds2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="renderingImgId != null">
        #{renderingImgId,jdbcType=INTEGER},
      </if>
      <if test="renderingId != null">
        #{renderingId,jdbcType=INTEGER},
      </if>
      <if test="renderingImagesPath != null">
        #{renderingImagesPath,jdbcType=VARCHAR},
      </if>
      <if test="renderingSortno != null">
        #{renderingSortno,jdbcType=INTEGER},
      </if>
      <if test="fileds1 != null">
        #{fileds1,jdbcType=VARCHAR},
      </if>
      <if test="fileds2 != null">
        #{fileds2,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>


  <select id="countByExample" parameterType="com.chixing.entity.RenderingImgExample" resultType="java.lang.Long">
    select count(*) from rendering_img
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>



  <update id="updateByExampleSelective" parameterType="map">
    update rendering_img
    <set>
      <if test="record.renderingImgId != null">
        rendering_img_id = #{record.renderingImgId,jdbcType=INTEGER},
      </if>
      <if test="record.renderingId != null">
        rendering_id = #{record.renderingId,jdbcType=INTEGER},
      </if>
      <if test="record.renderingImagesPath != null">
        rendering_images_path = #{record.renderingImagesPath,jdbcType=VARCHAR},
      </if>
      <if test="record.renderingSortno != null">
        rendering_sortno = #{record.renderingSortno,jdbcType=INTEGER},
      </if>
      <if test="record.fileds1 != null">
        fileds1 = #{record.fileds1,jdbcType=VARCHAR},
      </if>
      <if test="record.fileds2 != null">
        fileds2 = #{record.fileds2,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rendering_img
    set rendering_img_id = #{record.renderingImgId,jdbcType=INTEGER},
      rendering_id = #{record.renderingId,jdbcType=INTEGER},
      rendering_images_path = #{record.renderingImagesPath,jdbcType=VARCHAR},
      rendering_sortno = #{record.renderingSortno,jdbcType=INTEGER},
      fileds1 = #{record.fileds1,jdbcType=VARCHAR},
      fileds2 = #{record.fileds2,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chixing.entity.RenderingImg">
    update rendering_img
    <set>
      <if test="renderingId != null">
        rendering_id = #{renderingId,jdbcType=INTEGER},
      </if>
      <if test="renderingImagesPath != null">
        rendering_images_path = #{renderingImagesPath,jdbcType=VARCHAR},
      </if>
      <if test="renderingSortno != null">
        rendering_sortno = #{renderingSortno,jdbcType=INTEGER},
      </if>
      <if test="fileds1 != null">
        fileds1 = #{fileds1,jdbcType=VARCHAR},
      </if>
      <if test="fileds2 != null">
        fileds2 = #{fileds2,jdbcType=INTEGER},
      </if>
    </set>
    where rendering_img_id = #{renderingImgId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chixing.entity.RenderingImg">
    update rendering_img
    set rendering_id = #{renderingId,jdbcType=INTEGER},
      rendering_images_path = #{renderingImagesPath,jdbcType=VARCHAR},
      rendering_sortno = #{renderingSortno,jdbcType=INTEGER},
      fileds1 = #{fileds1,jdbcType=VARCHAR},
      fileds2 = #{fileds2,jdbcType=INTEGER}
    where rendering_img_id = #{renderingImgId,jdbcType=INTEGER}
  </update>
</mapper>