<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chixing.mapper.CompanyCollectionMapper">
  <resultMap id="BaseResultMap" type="com.chixing.entity.CompanyCollection">
    <id column="company_collection_id" jdbcType="INTEGER" property="companyCollectionId" />
    <result column="client_id" jdbcType="INTEGER" property="clientId" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="company_collectin_time" jdbcType="TIMESTAMP" property="companyCollectinTime" />
    <result column="company_field1" jdbcType="VARCHAR" property="companyField1" />
    <result column="company_field2" jdbcType="VARCHAR" property="companyField2" />
    <result column="company_collection_status" jdbcType="INTEGER" property="companyCollectionStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    company_collection_id, client_id, company_id, company_collectin_time, company_field1, 
    company_field2, company_collection_status
  </sql>

  <select id="selectCollectionCounts" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(company_collection_id)
    FROM company_collection
    where client_id=#{clientId,jdbcType=INTEGER} AND company_collection_status=1
  </select>

  <select id="selectCompanyCollection" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from company_collection
    where client_id=#{clientId,jdbcType=INTEGER} AND company_collection_status=1
  </select>



  <select id="selectIsCollection" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from company_collection
    where client_id=#{clientId,jdbcType=INTEGER}
    AND company_id=#{companyId,jdbcType=INTEGER}
  </select>













  <select id="selectByExample" parameterType="com.chixing.entity.CompanyCollectionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from company_collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from company_collection
    where company_collection_id = #{companyCollectionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from company_collection
    where company_collection_id = #{companyCollectionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chixing.entity.CompanyCollectionExample">
    delete from company_collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>



  <insert id="insert" parameterType="com.chixing.entity.CompanyCollection">
    insert into company_collection (company_collection_id, client_id, company_id, 
      company_collectin_time, company_field1, 
      company_field2, company_collection_status)
    values (#{companyCollectionId,jdbcType=INTEGER}, #{clientId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, 
      #{companyCollectinTime,jdbcType=TIMESTAMP}, #{companyField1,jdbcType=VARCHAR}, 
      #{companyField2,jdbcType=VARCHAR}, #{companyCollectionStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.chixing.entity.CompanyCollection">
    insert into company_collection
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyCollectionId != null">
        company_collection_id,
      </if>
      <if test="clientId != null">
        client_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="companyCollectinTime != null">
        company_collectin_time,
      </if>
      <if test="companyField1 != null">
        company_field1,
      </if>
      <if test="companyField2 != null">
        company_field2,
      </if>
      <if test="companyCollectionStatus != null">
        company_collection_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyCollectionId != null">
        #{companyCollectionId,jdbcType=INTEGER},
      </if>
      <if test="clientId != null">
        #{clientId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="companyCollectinTime != null">
        #{companyCollectinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="companyField1 != null">
        #{companyField1,jdbcType=VARCHAR},
      </if>
      <if test="companyField2 != null">
        #{companyField2,jdbcType=VARCHAR},
      </if>
      <if test="companyCollectionStatus != null">
        #{companyCollectionStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chixing.entity.CompanyCollectionExample" resultType="java.lang.Long">
    select count(*) from company_collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>




  <update id="updateByExampleSelective" parameterType="map">
    update company_collection
    <set>
      <if test="record.companyCollectionId != null">
        company_collection_id = #{record.companyCollectionId,jdbcType=INTEGER},
      </if>
      <if test="record.clientId != null">
        client_id = #{record.clientId,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.companyCollectinTime != null">
        company_collectin_time = #{record.companyCollectinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.companyField1 != null">
        company_field1 = #{record.companyField1,jdbcType=VARCHAR},
      </if>
      <if test="record.companyField2 != null">
        company_field2 = #{record.companyField2,jdbcType=VARCHAR},
      </if>
      <if test="record.companyCollectionStatus != null">
        company_collection_status = #{record.companyCollectionStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update company_collection
    set company_collection_id = #{record.companyCollectionId,jdbcType=INTEGER},
      client_id = #{record.clientId,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=INTEGER},
      company_collectin_time = #{record.companyCollectinTime,jdbcType=TIMESTAMP},
      company_field1 = #{record.companyField1,jdbcType=VARCHAR},
      company_field2 = #{record.companyField2,jdbcType=VARCHAR},
      company_collection_status = #{record.companyCollectionStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chixing.entity.CompanyCollection">
    update company_collection
    <set>
      <if test="clientId != null">
        client_id = #{clientId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="companyCollectinTime != null">
        company_collectin_time = #{companyCollectinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="companyField1 != null">
        company_field1 = #{companyField1,jdbcType=VARCHAR},
      </if>
      <if test="companyField2 != null">
        company_field2 = #{companyField2,jdbcType=VARCHAR},
      </if>
      <if test="companyCollectionStatus != null">
        company_collection_status = #{companyCollectionStatus,jdbcType=INTEGER},
      </if>
    </set>
    where company_collection_id = #{companyCollectionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chixing.entity.CompanyCollection">
    update company_collection
    set client_id = #{clientId,jdbcType=INTEGER},
        company_id = #{companyId,jdbcType=INTEGER},
        company_collectin_time = #{companyCollectinTime,jdbcType=TIMESTAMP},
        company_field1 = #{companyField1,jdbcType=VARCHAR},
        company_field2 = #{companyField2,jdbcType=VARCHAR},
        company_collection_status = #{companyCollectionStatus,jdbcType=INTEGER}
    where company_collection_id = #{companyCollectionId,jdbcType=INTEGER}
  </update>




</mapper>